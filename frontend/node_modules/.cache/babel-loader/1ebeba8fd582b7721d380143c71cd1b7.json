{"ast":null,"code":"import _slicedToArray from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zahyd\\\\OneDrive\\\\Desktop\\\\pro\\\\frontend\\\\src\\\\pages\\\\main_order\\\\main_order.page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MainOrderContainer from \"./old_main_order_container\";\nimport Button from \"@material-ui/core/Button\";\nimport { fetchMainOrderStart } from '../../redux/main-order/main_order.actions';\nimport { selectSites, selectMainOrderList, selectVendor, selectMonth } from '../../redux/main-order/main_order.selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    chip: {\n      margin: 2\n    },\n    noLabel: {\n      marginTop: theme.spacing(3)\n    },\n    tableContainer: {\n      paddingBottom: \"2em\"\n    }\n  };\n});\nvar ITEM_HEIGHT = 35;\nvar ITEM_PADDING_TOP = 1;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\n      width: 190\n    }\n  }\n};\nexport default function MainOrderPage() {\n  _s();\n\n  var _this = this;\n\n  var componentRef = useRef();\n  var dispatch = useDispatch();\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      siteName = _React$useState2[0],\n      setSiteName = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      VendorName = _React$useState4[0],\n      setVendorName = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      month = _React$useState6[0],\n      setMonth = _React$useState6[1];\n  /* Selected Iputs */\n\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      selectedSite = _React$useState8[0],\n      setSelectedSite = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedVendor = _React$useState10[0],\n      setSelectedVendor = _React$useState10[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      selectedMonth = _React$useState12[0],\n      setSelectedMonth = _React$useState12[1];\n\n  var handleChangeSite = function handleChangeSite(event) {\n    setSelectedSite(event.target.value);\n  };\n\n  var handleChangeVendor = function handleChangeVendor(event) {\n    setSelectedVendor(event.target.value);\n  };\n\n  var handleChangeMonth = function handleChangeMonth(event) {\n    setSelectedMonth(event.target.value);\n  }; //Selectors\n\n\n  var sitesList = useSelector(function (state) {\n    return selectSites(state);\n  });\n  var vendorList = useSelector(function (state) {\n    return selectVendor(state);\n  });\n  var monthList = useSelector(function (state) {\n    return selectMonth(state);\n  });\n  useEffect(function () {\n    dispatch(fetchMainOrderStart());\n  }, []);\n  console.log('Selected', selectedSite, selectedVendor, selectedMonth);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"row\",\n      className: classes.tableContainer,\n      spacing: 10,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Site Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedSite,\n            onChange: handleChangeSite,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: sitesList.map(function (name1) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name1,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedSite.indexOf(name1) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, _this)]\n              }, name1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Vendor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedVendor,\n            onChange: handleChangeVendor,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: vendorList.map(function (name) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedVendor.indexOf(name) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, _this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedMonth,\n            onChange: handleChangeMonth,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: monthList.map(function (name) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedMonth.indexOf(name) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, _this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainOrderPage, \"blEYgPYzfgTyRNFWSY++ra+oDhc=\", false, function () {\n  return [useDispatch, useStyles, useTheme, useSelector, useSelector, useSelector];\n});\n\n_c = MainOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainOrderPage\");","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/pro/frontend/src/pages/main_order/main_order.page.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Grid","MainOrderContainer","Button","fetchMainOrderStart","selectSites","selectMainOrderList","selectVendor","selectMonth","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","tableContainer","paddingBottom","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MainOrderPage","componentRef","dispatch","classes","siteName","setSiteName","VendorName","setVendorName","month","setMonth","selectedSite","setSelectedSite","selectedVendor","setSelectedVendor","selectedMonth","setSelectedMonth","handleChangeSite","event","target","value","handleChangeVendor","handleChangeMonth","sitesList","state","vendorList","monthList","console","log","selected","join","map","name1","indexOf","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MainOrderContainer from \"./old_main_order_container\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { fetchMainOrderStart } from '../../redux/main-order/main_order.actions';\r\nimport { selectSites, selectMainOrderList, selectVendor, selectMonth } from '../../redux/main-order/main_order.selector';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    tableContainer: {\r\n      paddingBottom: \"2em\",\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 35;\r\n  const ITEM_PADDING_TOP = 1;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\r\n        width: 190,\r\n      },\r\n    },\r\n  };\r\n\r\nexport default function MainOrderPage() {\r\n  const componentRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [siteName, setSiteName] = React.useState([]);\r\n  const [VendorName, setVendorName] = React.useState([]);\r\n  const [month, setMonth] = React.useState([]);\r\n\r\n  /* Selected Iputs */\r\n  const [selectedSite, setSelectedSite] = React.useState([]);\r\n  const [selectedVendor, setSelectedVendor] = React.useState([]);\r\n  const [selectedMonth, setSelectedMonth] = React.useState([]);\r\n\r\n  const handleChangeSite = (event) => {\r\n    setSelectedSite(event.target.value);\r\n  };\r\n\r\n  const handleChangeVendor = (event) => {\r\n    setSelectedVendor(event.target.value);\r\n  };\r\n\r\n  const handleChangeMonth = (event) => {\r\n    setSelectedMonth(event.target.value);\r\n  };\r\n\r\n  //Selectors\r\n  const sitesList = useSelector((state) => selectSites(state));\r\n  const vendorList = useSelector((state) => selectVendor(state));\r\n  const monthList = useSelector((state) => selectMonth(state));\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n\t\t\tfetchMainOrderStart()\r\n\t\t);\r\n  }, []);\r\n\r\n  console.log('Selected', selectedSite, selectedVendor, selectedMonth);\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Grid\r\n        container\r\n        justify='center'\r\n        direction='row'\r\n        className={classes.tableContainer}\r\n        spacing={10}\r\n      >\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='demo-mutiple-checkbox-label'>Site Name</InputLabel>\r\n            <Select\r\n              labelId='demo-mutiple-checkbox-label'\r\n              id='demo-mutiple-checkbox'\r\n              multiple\r\n              value={selectedSite}\r\n              onChange={handleChangeSite}\r\n              input={<Input />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {sitesList.map((name1) => (\r\n                <MenuItem key={name1} value={name1}>\r\n                  <Checkbox checked={selectedSite.indexOf(name1) > -1} />\r\n                  <ListItemText primary={name1} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='demo-mutiple-checkbox-label'>\r\n              Vendor Name\r\n            </InputLabel>\r\n            <Select\r\n              labelId='demo-mutiple-checkbox-label'\r\n              id='demo-mutiple-checkbox'\r\n              multiple\r\n              value={selectedVendor}\r\n              onChange={handleChangeVendor}\r\n              input={<Input />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {vendorList.map((name) => (\r\n                <MenuItem key={name} value={name}>\r\n                  <Checkbox checked={selectedVendor.indexOf(name) > -1} />\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='demo-mutiple-checkbox-label'>Month</InputLabel>\r\n            <Select\r\n              labelId='demo-mutiple-checkbox-label'\r\n              id='demo-mutiple-checkbox'\r\n              multiple\r\n              value={selectedMonth}\r\n              onChange={handleChangeMonth}\r\n              input={<Input />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {monthList.map((name) => (\r\n                <MenuItem key={name} value={name}>\r\n                  <Checkbox checked={selectedMonth.indexOf(name) > -1} />\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}