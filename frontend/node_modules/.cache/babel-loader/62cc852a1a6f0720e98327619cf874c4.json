{"ast":null,"code":"import _toConsumableArray from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zahyd\\\\OneDrive\\\\Desktop\\\\pro\\\\frontend\\\\src\\\\pages\\\\main_order\\\\main_order.page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useReactToPrint } from \"react-to-print\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { fetchMainOrderStart } from '../../redux/main-order/main_order.actions';\nimport { selectSites, selectMainOrderList, selectVendor, selectMonth, dropdownList } from '../../redux/main-order/main_order.selector';\nimport MainOrderComponent from './main_order.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    chip: {\n      margin: 2\n    },\n    noLabel: {\n      marginTop: theme.spacing(3)\n    },\n    tableContainer: {\n      paddingBottom: \"2em\"\n    }\n  };\n});\nvar ITEM_HEIGHT = 35;\nvar ITEM_PADDING_TOP = 1;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\n      width: 190\n    }\n  }\n};\nexport default function MainOrderPage() {\n  _s();\n\n  var _this = this;\n\n  var componentRef = useRef();\n  var dispatch = useDispatch();\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      siteName = _React$useState2[0],\n      setSiteName = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      VendorName = _React$useState4[0],\n      setVendorName = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      month = _React$useState6[0],\n      setMonth = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      filteredData = _React$useState8[0],\n      setFilteredData = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      filterDropData = _React$useState10[0],\n      setFilterDropData = _React$useState10[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      filterSiteData = _React$useState12[0],\n      setFilterSiteData = _React$useState12[1];\n\n  var _React$useState13 = React.useState([]),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      filterVendorData = _React$useState14[0],\n      setFilterVendorData = _React$useState14[1];\n  /* Selected Iputs */\n\n\n  var _React$useState15 = React.useState([]),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      selectedSite = _React$useState16[0],\n      setSelectedSite = _React$useState16[1];\n\n  var _React$useState17 = React.useState([]),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      selectedVendor = _React$useState18[0],\n      setSelectedVendor = _React$useState18[1];\n\n  var _React$useState19 = React.useState([]),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      selectedMonth = _React$useState20[0],\n      setSelectedMonth = _React$useState20[1];\n\n  var handleChangeSite = function handleChangeSite(event) {\n    setSelectedSite(event.target.value);\n  };\n\n  var handleChangeVendor = function handleChangeVendor(event) {\n    setSelectedVendor(event.target.value);\n  };\n\n  var handleChangeMonth = function handleChangeMonth(event) {\n    setSelectedMonth(event.target.value);\n  }; //Selectors\n\n\n  var mainOrderList = useSelector(function (state) {\n    return selectMainOrderList(state);\n  });\n  var sitesList = useSelector(function (state) {\n    return selectSites(state);\n  });\n  var vendorList = useSelector(function (state) {\n    return selectVendor(state);\n  });\n  var monthList = useSelector(function (state) {\n    return selectMonth(state);\n  });\n  var dropList = useSelector(function (state) {\n    return dropdownList(state);\n  });\n  var handlePrint = useReactToPrint({\n    content: function content() {\n      return componentRef.current;\n    }\n  });\n  useEffect(function () {\n    dispatch(fetchMainOrderStart());\n    var data_site_fill = selectedSite.length ? dropList.filter(function (order) {\n      return selectedSite.includes(order.site_name);\n    }) : dropList;\n    var data_vendor_fill = selectedVendor.length ? data_site_fill.filter(function (order) {\n      return selectedVendor.includes(order.vendor_name);\n    }) : data_site_fill;\n    var data_month_fill = selectedMonth.length ? data_vendor_fill.filter(function (order) {\n      return selectedMonth.includes(order.month);\n    }) : data_vendor_fill;\n    setFilterSiteData(data_site_fill);\n    setFilterVendorData(data_vendor_fill);\n    setFilterDropData(data_month_fill);\n    console.log('data_site_fill', data_month_fill);\n  }, [selectedSite, selectedVendor, selectedMonth]);\n  console.log('Selected', selectedSite, selectedVendor, selectedMonth); //console.log('this is filtered data', filteredData);\n\n  console.log('this is dropdown list', dropList);\n\n  var site_dropdown = _toConsumableArray(new Set(dropList.map(function (item) {\n    return item.site_name;\n  })));\n\n  var vendor_dropdown = _toConsumableArray(new Set(filterSiteData.map(function (item) {\n    return item.vendor_name;\n  })));\n\n  var month_dropdown = _toConsumableArray(new Set(filterVendorData.map(function (item) {\n    return item.month;\n  })));\n\n  console.log('site dropdown list', site_dropdown, vendor_dropdown, month_dropdown);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePrint,\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      children: \"Print this out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"row\",\n      className: classes.tableContainer,\n      spacing: 10,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Site Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedSite,\n            onChange: handleChangeSite,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: site_dropdown.map(function (name1) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name1,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedSite.indexOf(name1) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, _this)]\n              }, name1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Vendor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedVendor,\n            onChange: handleChangeVendor,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: vendor_dropdown.map(function (name) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedVendor.indexOf(name) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, _this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedMonth,\n            onChange: handleChangeMonth,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: month_dropdown.map(function (name) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedMonth.indexOf(name) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, _this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MainOrderComponent, {\n      ref: componentRef,\n      selectedSite: selectedSite,\n      selectedVendor: selectedVendor,\n      selectedMonth: selectedMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainOrderPage, \"rc3CcXw8UnSPAa/LyVZlffah3fU=\", false, function () {\n  return [useDispatch, useStyles, useTheme, useSelector, useSelector, useSelector, useSelector, useSelector, useReactToPrint];\n});\n\n_c = MainOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainOrderPage\");","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/pro/frontend/src/pages/main_order/main_order.page.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","makeStyles","useTheme","useReactToPrint","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Grid","Button","fetchMainOrderStart","selectSites","selectMainOrderList","selectVendor","selectMonth","dropdownList","MainOrderComponent","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","tableContainer","paddingBottom","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MainOrderPage","componentRef","dispatch","classes","siteName","setSiteName","VendorName","setVendorName","month","setMonth","filteredData","setFilteredData","filterDropData","setFilterDropData","filterSiteData","setFilterSiteData","filterVendorData","setFilterVendorData","selectedSite","setSelectedSite","selectedVendor","setSelectedVendor","selectedMonth","setSelectedMonth","handleChangeSite","event","target","value","handleChangeVendor","handleChangeMonth","mainOrderList","state","sitesList","vendorList","monthList","dropList","handlePrint","content","current","data_site_fill","length","filter","order","includes","site_name","data_vendor_fill","vendor_name","data_month_fill","console","log","site_dropdown","Set","map","item","vendor_dropdown","month_dropdown","selected","join","name1","indexOf","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,mBAAT,QAAoC,2CAApC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,YAA3C,EAAyDC,WAAzD,EAAsEC,YAAtE,QAA0F,4CAA1F;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;;AAEA,IAAMC,SAAS,GAAGnB,UAAU,CAAC,UAACoB,KAAD;AAAA,SAAY;AACrCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,MAAAA,QAAQ,EAAE,GAFC;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KADwB;AAMrCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,QAAQ,EAAE;AAFL,KAN8B;AAUrCC,IAAAA,IAAI,EAAE;AACJP,MAAAA,MAAM,EAAE;AADJ,KAV+B;AAarCQ,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAEX,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ,KAb4B;AAgBrCS,IAAAA,cAAc,EAAE;AACdC,MAAAA,aAAa,EAAE;AADD;AAhBqB,GAAZ;AAAA,CAAD,CAA5B;AAqBE,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,gBAAgB,GAAG,CAAzB;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AASF,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAAA;;AACtC,MAAMC,YAAY,GAAG7C,MAAM,EAA3B;AACA,MAAM8C,QAAQ,GAAG7C,WAAW,EAA5B;AACA,MAAM8C,OAAO,GAAGzB,SAAS,EAAzB;AACA,MAAMC,KAAK,GAAGnB,QAAQ,EAAtB;;AAJsC,wBAKNP,KAAK,CAACE,QAAN,CAAe,EAAf,CALM;AAAA;AAAA,MAK/BiD,QAL+B;AAAA,MAKrBC,WALqB;;AAAA,yBAMFpD,KAAK,CAACE,QAAN,CAAe,EAAf,CANE;AAAA;AAAA,MAM/BmD,UAN+B;AAAA,MAMnBC,aANmB;;AAAA,yBAOZtD,KAAK,CAACE,QAAN,CAAe,EAAf,CAPY;AAAA;AAAA,MAO/BqD,KAP+B;AAAA,MAOxBC,QAPwB;;AAAA,yBAQExD,KAAK,CAACE,QAAN,CAAe,EAAf,CARF;AAAA;AAAA,MAQ/BuD,YAR+B;AAAA,MAQjBC,eARiB;;AAAA,yBASM1D,KAAK,CAACE,QAAN,CAAe,EAAf,CATN;AAAA;AAAA,MAS/ByD,cAT+B;AAAA,MASfC,iBATe;;AAAA,0BAUM5D,KAAK,CAACE,QAAN,CAAe,EAAf,CAVN;AAAA;AAAA,MAU/B2D,cAV+B;AAAA,MAUfC,iBAVe;;AAAA,0BAWU9D,KAAK,CAACE,QAAN,CAAe,EAAf,CAXV;AAAA;AAAA,MAW/B6D,gBAX+B;AAAA,MAWbC,mBAXa;AAatC;;;AAbsC,0BAcEhE,KAAK,CAACE,QAAN,CAAe,EAAf,CAdF;AAAA;AAAA,MAc/B+D,YAd+B;AAAA,MAcjBC,eAdiB;;AAAA,0BAeMlE,KAAK,CAACE,QAAN,CAAe,EAAf,CAfN;AAAA;AAAA,MAe/BiE,cAf+B;AAAA,MAefC,iBAfe;;AAAA,0BAgBIpE,KAAK,CAACE,QAAN,CAAe,EAAf,CAhBJ;AAAA;AAAA,MAgB/BmE,aAhB+B;AAAA,MAgBhBC,gBAhBgB;;AAmBtC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACH,KAAD,EAAW;AACpCJ,IAAAA,iBAAiB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAFD;;AAIA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,KAAD,EAAW;AACnCF,IAAAA,gBAAgB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACD,GAFD,CA3BsC,CA+BtC;;;AACA,MAAMG,aAAa,GAAGxE,WAAW,CAAC,UAACyE,KAAD;AAAA,WAAW1D,mBAAmB,CAAC0D,KAAD,CAA9B;AAAA,GAAD,CAAjC;AACA,MAAMC,SAAS,GAAG1E,WAAW,CAAC,UAACyE,KAAD;AAAA,WAAW3D,WAAW,CAAC2D,KAAD,CAAtB;AAAA,GAAD,CAA7B;AACA,MAAME,UAAU,GAAG3E,WAAW,CAAC,UAACyE,KAAD;AAAA,WAAWzD,YAAY,CAACyD,KAAD,CAAvB;AAAA,GAAD,CAA9B;AACA,MAAMG,SAAS,GAAG5E,WAAW,CAAC,UAACyE,KAAD;AAAA,WAAWxD,WAAW,CAACwD,KAAD,CAAtB;AAAA,GAAD,CAA7B;AACA,MAAMI,QAAQ,GAAG7E,WAAW,CAAC,UAACyE,KAAD;AAAA,WAAWvD,YAAY,CAACuD,KAAD,CAAvB;AAAA,GAAD,CAA5B;AACA,MAAMK,WAAW,GAAG3E,eAAe,CAAC;AAClC4E,IAAAA,OAAO,EAAE;AAAA,aAAMpC,YAAY,CAACqC,OAAnB;AAAA;AADyB,GAAD,CAAnC;AAKApF,EAAAA,SAAS,CAAC,YAAM;AACdgD,IAAAA,QAAQ,CACT/B,mBAAmB,EADV,CAAR;AAII,QAAMoE,cAAc,GAAGrB,YAAY,CAACsB,MAAb,GAAuBL,QAAQ,CAACM,MAAT,CAAgB,UAACC,KAAD;AAAA,aAAYxB,YAAY,CAACyB,QAAb,CAAsBD,KAAK,CAACE,SAA5B,CAAZ;AAAA,KAAhB,CAAvB,GAA+FT,QAAtH;AACA,QAAMU,gBAAgB,GAAGzB,cAAc,CAACoB,MAAf,GAAyBD,cAAc,CAACE,MAAf,CAAsB,UAACC,KAAD;AAAA,aAAYtB,cAAc,CAACuB,QAAf,CAAwBD,KAAK,CAACI,WAA9B,CAAZ;AAAA,KAAtB,CAAzB,GAA2GP,cAApI;AACA,QAAMQ,eAAe,GAAGzB,aAAa,CAACkB,MAAd,GAAwBK,gBAAgB,CAACJ,MAAjB,CAAwB,UAACC,KAAD;AAAA,aAAYpB,aAAa,CAACqB,QAAd,CAAuBD,KAAK,CAAClC,KAA7B,CAAZ;AAAA,KAAxB,CAAxB,GAAqGqC,gBAA7H;AACA9B,IAAAA,iBAAiB,CAACwB,cAAD,CAAjB;AACAtB,IAAAA,mBAAmB,CAAC4B,gBAAD,CAAnB;AACAhC,IAAAA,iBAAiB,CAACkC,eAAD,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,eAA9B;AAEL,GAbQ,EAaN,CAAC7B,YAAD,EAAeE,cAAf,EAA+BE,aAA/B,CAbM,CAAT;AAeA0B,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB/B,YAAxB,EAAsCE,cAAtC,EAAsDE,aAAtD,EAzDsC,CA0DtC;;AACA0B,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCd,QAArC;;AAEA,MAAMe,aAAa,sBAAO,IAAIC,GAAJ,CAAQhB,QAAQ,CAACiB,GAAT,CAAa,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACT,SAAT;AAAA,GAAjB,CAAR,CAAP,CAAnB;;AACA,MAAMU,eAAe,sBAAO,IAAIH,GAAJ,CAAQrC,cAAc,CAACsC,GAAf,CAAmB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACP,WAAT;AAAA,GAAvB,CAAR,CAAP,CAArB;;AACA,MAAMS,cAAc,sBAAO,IAAIJ,GAAJ,CAAQnC,gBAAgB,CAACoC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAAC7C,KAAT;AAAA,GAAzB,CAAR,CAAP,CAApB;;AACAwC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,aAAlC,EAAiDI,eAAjD,EAAkEC,cAAlE;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEnB,WADX;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUI,QAAC,IAAD;AACA,MAAA,SAAS,MADT;AAEA,MAAA,OAAO,EAAC,QAFR;AAGA,MAAA,SAAS,EAAC,KAHV;AAIA,MAAA,SAAS,EAAEjC,OAAO,CAACZ,cAJnB;AAKA,MAAA,OAAO,EAAE,EALT;AAAA,8BAOA,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEY,OAAO,CAACvB,WAAhC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,6BADV;AAEE,YAAA,EAAE,EAAC,uBAFL;AAGE,YAAA,QAAQ,MAHV;AAIE,YAAA,KAAK,EAAEsC,YAJT;AAKE,YAAA,QAAQ,EAAEM,gBALZ;AAME,YAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBANT;AAOE,YAAA,WAAW,EAAE,qBAACgC,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAAd;AAAA,aAPf;AAQE,YAAA,SAAS,EAAE9D,SARb;AAAA,sBAUGuD,aAAa,CAACE,GAAd,CAAkB,UAACM,KAAD;AAAA,kCACjB,QAAC,QAAD;AAAsB,gBAAA,KAAK,EAAEA,KAA7B;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,OAAO,EAAExC,YAAY,CAACyC,OAAb,CAAqBD,KAArB,IAA8B,CAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,QAAC,YAAD;AAAc,kBAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,yBAFF;AAAA,iBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,uBADiB;AAAA,aAAlB;AAVH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPA,eA6BA,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEvD,OAAO,CAACvB,WAAhC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,6BADV;AAEE,YAAA,EAAE,EAAC,uBAFL;AAGE,YAAA,QAAQ,MAHV;AAIE,YAAA,KAAK,EAAEwC,cAJT;AAKE,YAAA,QAAQ,EAAEQ,kBALZ;AAME,YAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBANT;AAOE,YAAA,WAAW,EAAE,qBAAC4B,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAAd;AAAA,aAPf;AAQE,YAAA,SAAS,EAAE9D,SARb;AAAA,sBAUG2D,eAAe,CAACF,GAAhB,CAAoB,UAACQ,IAAD;AAAA,kCACnB,QAAC,QAAD;AAAqB,gBAAA,KAAK,EAAEA,IAA5B;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,OAAO,EAAExC,cAAc,CAACuC,OAAf,CAAuBC,IAAvB,IAA+B,CAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,QAAC,YAAD;AAAc,kBAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,yBAFF;AAAA,iBAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,uBADmB;AAAA,aAApB;AAVH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BA,eAqDA,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEzD,OAAO,CAACvB,WAAhC;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,6BADV;AAEE,YAAA,EAAE,EAAC,uBAFL;AAGE,YAAA,QAAQ,MAHV;AAIE,YAAA,KAAK,EAAE0C,aAJT;AAKE,YAAA,QAAQ,EAAEO,iBALZ;AAME,YAAA,KAAK,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBANT;AAOE,YAAA,WAAW,EAAE,qBAAC2B,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAAd;AAAA,aAPf;AAQE,YAAA,SAAS,EAAE9D,SARb;AAAA,sBAUG4D,cAAc,CAACH,GAAf,CAAmB,UAACQ,IAAD;AAAA,kCAClB,QAAC,QAAD;AAAqB,gBAAA,KAAK,EAAEA,IAA5B;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,OAAO,EAAEtC,aAAa,CAACqC,OAAd,CAAsBC,IAAtB,IAA8B,CAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,QAAC,YAAD;AAAc,kBAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,yBAFF;AAAA,iBAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,uBADkB;AAAA,aAAnB;AAVH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArDA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAsFE,QAAC,kBAAD;AAAoB,MAAA,GAAG,EAAE3D,YAAzB;AAAuC,MAAA,YAAY,EAAEiB,YAArD;AAAmE,MAAA,cAAc,EAAEE,cAAnF;AAAmG,MAAA,aAAa,EAAEE;AAAlH;AAAA;AAAA;AAAA;AAAA,YAtFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6FD;;GA/JuBtB,a;UAEL3C,W,EACDqB,S,EACFlB,Q,EA4BQF,W,EACJA,W,EACCA,W,EACDA,W,EACDA,W,EACGG,e;;;KArCEuC,a","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { fetchMainOrderStart } from '../../redux/main-order/main_order.actions';\r\nimport { selectSites, selectMainOrderList, selectVendor, selectMonth, dropdownList } from '../../redux/main-order/main_order.selector';\r\nimport MainOrderComponent from './main_order.component';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    tableContainer: {\r\n      paddingBottom: \"2em\",\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 35;\r\n  const ITEM_PADDING_TOP = 1;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\r\n        width: 190,\r\n      },\r\n    },\r\n  };\r\n\r\nexport default function MainOrderPage() {\r\n  const componentRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [siteName, setSiteName] = React.useState([]);\r\n  const [VendorName, setVendorName] = React.useState([]);\r\n  const [month, setMonth] = React.useState([]);\r\n  const [filteredData, setFilteredData] = React.useState([]);\r\n  const [filterDropData, setFilterDropData] = React.useState([]);\r\n  const [filterSiteData, setFilterSiteData] = React.useState([]);\r\n  const [filterVendorData, setFilterVendorData] = React.useState([]);\r\n\r\n  /* Selected Iputs */\r\n  const [selectedSite, setSelectedSite] = React.useState([]);\r\n  const [selectedVendor, setSelectedVendor] = React.useState([]);\r\n  const [selectedMonth, setSelectedMonth] = React.useState([]);\r\n\r\n\r\n  const handleChangeSite = (event) => {\r\n    setSelectedSite(event.target.value);\r\n  };\r\n\r\n  const handleChangeVendor = (event) => {\r\n    setSelectedVendor(event.target.value);\r\n  };\r\n\r\n  const handleChangeMonth = (event) => {\r\n    setSelectedMonth(event.target.value);\r\n  };\r\n\r\n  //Selectors\r\n  const mainOrderList = useSelector((state) => selectMainOrderList(state));\r\n  const sitesList = useSelector((state) => selectSites(state));\r\n  const vendorList = useSelector((state) => selectVendor(state));\r\n  const monthList = useSelector((state) => selectMonth(state));\r\n  const dropList = useSelector((state) => dropdownList(state));\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n\t\t\tfetchMainOrderStart()\r\n\t\t);\r\n\r\n        const data_site_fill = selectedSite.length ? (dropList.filter((order) => (selectedSite.includes(order.site_name)))) : dropList\r\n        const data_vendor_fill = selectedVendor.length ? (data_site_fill.filter((order) => (selectedVendor.includes(order.vendor_name)))) : data_site_fill\r\n        const data_month_fill = selectedMonth.length ? (data_vendor_fill.filter((order) => (selectedMonth.includes(order.month)))) : data_vendor_fill\r\n        setFilterSiteData(data_site_fill)\r\n        setFilterVendorData(data_vendor_fill)\r\n        setFilterDropData(data_month_fill)\r\n        console.log('data_site_fill', data_month_fill)\r\n\r\n  }, [selectedSite, selectedVendor, selectedMonth]);\r\n\r\n  console.log('Selected', selectedSite, selectedVendor, selectedMonth);\r\n  //console.log('this is filtered data', filteredData);\r\n  console.log('this is dropdown list', dropList)\r\n\r\n  const site_dropdown = [...new Set(dropList.map(item => item.site_name))]\r\n  const vendor_dropdown = [...new Set(filterSiteData.map(item => item.vendor_name))]\r\n  const month_dropdown = [...new Set(filterVendorData.map(item => item.month))]\r\n  console.log('site dropdown list', site_dropdown, vendor_dropdown, month_dropdown)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        onClick={handlePrint}\r\n        variant='contained'\r\n        color='primary'\r\n        size='large'\r\n      >\r\n        Print this out!\r\n      </Button>\r\n\r\n        <Grid\r\n        container\r\n        justify='center'\r\n        direction='row'\r\n        className={classes.tableContainer}\r\n        spacing={10}\r\n      >\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='demo-mutiple-checkbox-label'>Site Name</InputLabel>\r\n            <Select\r\n              labelId='demo-mutiple-checkbox-label'\r\n              id='demo-mutiple-checkbox'\r\n              multiple\r\n              value={selectedSite}\r\n              onChange={handleChangeSite}\r\n              input={<Input />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {site_dropdown.map((name1) => (\r\n                <MenuItem key={name1} value={name1}>\r\n                  <Checkbox checked={selectedSite.indexOf(name1) > -1} />\r\n                  <ListItemText primary={name1} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='demo-mutiple-checkbox-label'>\r\n              Vendor Name\r\n            </InputLabel>\r\n            <Select\r\n              labelId='demo-mutiple-checkbox-label'\r\n              id='demo-mutiple-checkbox'\r\n              multiple\r\n              value={selectedVendor}\r\n              onChange={handleChangeVendor}\r\n              input={<Input />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {vendor_dropdown.map((name) => (\r\n                <MenuItem key={name} value={name}>\r\n                  <Checkbox checked={selectedVendor.indexOf(name) > -1} />\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='demo-mutiple-checkbox-label'>Month</InputLabel>\r\n            <Select\r\n              labelId='demo-mutiple-checkbox-label'\r\n              id='demo-mutiple-checkbox'\r\n              multiple\r\n              value={selectedMonth}\r\n              onChange={handleChangeMonth}\r\n              input={<Input />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {month_dropdown.map((name) => (\r\n                <MenuItem key={name} value={name}>\r\n                  <Checkbox checked={selectedMonth.indexOf(name) > -1} />\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <MainOrderComponent ref={componentRef} selectedSite={selectedSite} selectedVendor={selectedVendor} selectedMonth={selectedMonth} />\r\n\r\n      \r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}