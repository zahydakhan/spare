{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchRoller),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(onFetchRollerStart),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addRoller),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(onAddRollerStart),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(delRoller),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(onDelRollerStart),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(editRoller),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(onEditRollerStart);\n\nimport { takeLatest, put, call } from 'redux-saga/effects';\nimport * as Roller_types from './roller.types';\nimport axios from '../../utils/axios1';\nimport { editRollerFailure, delRollerFailure, addRollerFailure, fetchRollerStart, fetchRollerSuccess, fetchRollerFailure } from './roller.actions'; //Fetch Roller Saga\n\nexport function fetchRoller(action) {\n  var pageNo, rowsPerPage, searchstr, rollerList;\n  return _regeneratorRuntime.wrap(function fetchRoller$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('running Roller Fetch Start saga');\n          pageNo = action.payload.pageNo;\n          rowsPerPage = action.payload.rowsPerPage;\n          searchstr = action.payload.searchstr;\n          _context.prev = 4;\n          _context.next = 7;\n          return axios.get(\"/sp/rollerlist/?search=\".concat(searchstr, \"&p=\").concat(pageNo + 1, \"&records=\").concat(rowsPerPage));\n\n        case 7:\n          rollerList = _context.sent;\n          console.log(rollerList);\n          _context.next = 11;\n          return put(fetchRollerSuccess(rollerList.data));\n\n        case 11:\n          _context.next = 17;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](4);\n          _context.next = 17;\n          return put(fetchRollerFailure(_context.t0.message));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 13]]);\n}\nexport function onFetchRollerStart() {\n  return _regeneratorRuntime.wrap(function onFetchRollerStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(Roller_types.FETCH_ROLLER_START, fetchRoller);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //Add ROLLERS Saga\n\nexport function addRoller(action) {\n  var rollerList;\n  return _regeneratorRuntime.wrap(function addRoller$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('running Roller add start saga');\n          console.log(action.payload);\n          _context3.next = 5;\n          return axios.post(\"/sp/roller/\", action.payload);\n\n        case 5:\n          rollerList = _context3.sent;\n          console.log(rollerList); //yield put(addRollerSuccess(sitesList.data));\n\n          _context3.next = 9;\n          return put(fetchRollerStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 9:\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put(addRollerFailure(_context3.t0.message));\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\nexport function onAddRollerStart() {\n  return _regeneratorRuntime.wrap(function onAddRollerStart$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(Roller_types.ADD_ROLLER_START, addRoller);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //Delete ROLLERS Saga\n\nexport function delRoller(action) {\n  var rollerList;\n  return _regeneratorRuntime.wrap(function delRoller$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log('running Roller delete axios');\n          console.log(action.payload);\n          _context5.next = 5;\n          return axios.delete(\"/sp/roller/\" + action.payload);\n\n        case 5:\n          rollerList = _context5.sent;\n          console.log(rollerList);\n          _context5.next = 9;\n          return put(fetchRollerStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 9:\n          _context5.next = 15;\n          break;\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 15;\n          return put(delRollerFailure(_context5.t0.message));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 11]]);\n}\nexport function onDelRollerStart() {\n  return _regeneratorRuntime.wrap(function onDelRollerStart$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(Roller_types.DEL_ROLLER_START, delRoller);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //Edit ROLLERS Saga\n\nexport function editRoller(action) {\n  var rowId, values, rollerList;\n  return _regeneratorRuntime.wrap(function editRoller$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log('running Roller Edit saga');\n          rowId = action.payload.rollerId;\n          values = action.payload.values;\n          _context7.next = 6;\n          return axios.put(\"/sp/roller/\".concat(rowId, \"/\"), values);\n\n        case 6:\n          rollerList = _context7.sent;\n          console.log(rollerList);\n          _context7.next = 10;\n          return put(fetchRollerStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 10:\n          _context7.next = 16;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 16;\n          return put(editRollerFailure(_context7.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 12]]);\n}\nexport function onEditRollerStart() {\n  return _regeneratorRuntime.wrap(function onEditRollerStart$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(Roller_types.EDIT_ROLLER_START, editRoller);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/pro/frontend/src/redux/roller/roller.sagas.js"],"names":["fetchRoller","onFetchRollerStart","addRoller","onAddRollerStart","delRoller","onDelRollerStart","editRoller","onEditRollerStart","takeLatest","put","call","Roller_types","axios","editRollerFailure","delRollerFailure","addRollerFailure","fetchRollerStart","fetchRollerSuccess","fetchRollerFailure","action","console","log","pageNo","payload","rowsPerPage","searchstr","get","rollerList","data","message","FETCH_ROLLER_START","post","ADD_ROLLER_START","delete","DEL_ROLLER_START","rowId","rollerId","values","EDIT_ROLLER_START"],"mappings":"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","sourcesContent":["import { takeLatest, put, call } from 'redux-saga/effects';\n\nimport * as Roller_types from './roller.types';\nimport axios from '../../utils/axios1';\n\nimport {\n\teditRollerFailure,\n\tdelRollerFailure,\n\taddRollerFailure,\n\tfetchRollerStart,\n\tfetchRollerSuccess,\n\tfetchRollerFailure,\n} from './roller.actions';\n\n//Fetch Roller Saga\nexport function* fetchRoller(action) {\n\tconsole.log('running Roller Fetch Start saga');\n\tlet pageNo = action.payload.pageNo;\n\tlet rowsPerPage = action.payload.rowsPerPage;\n\tlet searchstr = action.payload.searchstr;\n\ttry {\n\t\tconst rollerList = yield axios.get(\n\t\t\t`/sp/rollerlist/?search=${searchstr}&p=${\n\t\t\t\tpageNo + 1\n\t\t\t}&records=${rowsPerPage}`\n\t\t);\n\t\tconsole.log(rollerList);\n\t\tyield put(fetchRollerSuccess(rollerList.data));\n\t} catch (error) {\n\t\tyield put(fetchRollerFailure(error.message));\n\t}\n}\n\nexport function* onFetchRollerStart() {\n\tyield takeLatest(Roller_types.FETCH_ROLLER_START, fetchRoller);\n}\n//Add ROLLERS Saga\nexport function* addRoller(action) {\n\ttry {\n\t\tconsole.log('running Roller add start saga');\n\t\tconsole.log(action.payload);\n\t\tconst rollerList = yield axios.post(`/sp/roller/`, action.payload);\n\t\tconsole.log(rollerList);\n\n\t\t//yield put(addRollerSuccess(sitesList.data));\n\t\tyield put(fetchRollerStart({ pageNo: 0, rowsPerPage: 10, searchstr: '' }));\n\t} catch (error) {\n\t\tyield put(addRollerFailure(error.message));\n\t}\n}\n\nexport function* onAddRollerStart() {\n\tyield takeLatest(Roller_types.ADD_ROLLER_START, addRoller);\n}\n\n//Delete ROLLERS Saga\nexport function* delRoller(action) {\n\ttry {\n\t\tconsole.log('running Roller delete axios');\n\t\tconsole.log(action.payload);\n\t\tconst rollerList = yield axios.delete(`/sp/roller/` + action.payload);\n\t\tconsole.log(rollerList);\n\n\t\tyield put(fetchRollerStart({ pageNo: 0, rowsPerPage: 10, searchstr: '' }));\n\t} catch (error) {\n\t\tyield put(delRollerFailure(error.message));\n\t}\n}\n\nexport function* onDelRollerStart() {\n\tyield takeLatest(Roller_types.DEL_ROLLER_START, delRoller);\n}\n\n//Edit ROLLERS Saga\nexport function* editRoller(action) {\n\ttry {\n\t\tconsole.log('running Roller Edit saga');\n\t\tlet rowId = action.payload.rollerId;\n\t\tlet values = action.payload.values;\n\t\tconst rollerList = yield axios.put(`/sp/roller/${rowId}/`, values);\n\t\tconsole.log(rollerList);\n\n\t\tyield put(fetchRollerStart({ pageNo: 0, rowsPerPage: 10, searchstr: '' }));\n\t} catch (error) {\n\t\tyield put(editRollerFailure(error.message));\n\t}\n}\n\nexport function* onEditRollerStart() {\n\tyield takeLatest(Roller_types.EDIT_ROLLER_START, editRoller);\n}\n"]},"metadata":{},"sourceType":"module"}