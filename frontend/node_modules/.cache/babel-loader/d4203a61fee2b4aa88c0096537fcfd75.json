{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchLocalspare),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(onFetchLocalspareStart),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addLocalspare),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(onAddLocalspareStart),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(delLocalspare),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(onDelLocalspareStart),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(editLocalspare),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(onEditLocalspareStart);\n\nimport { takeLatest, put, call } from 'redux-saga/effects';\nimport * as Localspare_types from './localspare.types';\nimport axios from '../../utils/axios1';\nimport { editLocalspareFailure, delLocalspareFailure, addLocalspareFailure, fetchLocalspareStart, fetchLocalspareSuccess, fetchLocalspareFailure } from './localspare.actions'; //Fetch Localspare Saga\n\nexport function fetchLocalspare(action) {\n  var pageNo, rowsPerPage, searchstr, localspareList;\n  return _regeneratorRuntime.wrap(function fetchLocalspare$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('running Localspare Fetch Start saga');\n          pageNo = action.payload.pageNo;\n          rowsPerPage = action.payload.rowsPerPage;\n          searchstr = action.payload.searchstr;\n          _context.prev = 4;\n          _context.next = 7;\n          return axios.get(\"/sp/localsparelist/?search=\".concat(searchstr, \"&p=\").concat(pageNo + 1, \"&records=\").concat(rowsPerPage));\n\n        case 7:\n          localspareList = _context.sent;\n          console.log(localspareList);\n          console.log(localspareList.data);\n          _context.next = 12;\n          return put(fetchLocalspareSuccess(localspareList.data));\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](4);\n          _context.next = 18;\n          return put(fetchLocalspareFailure(_context.t0.message));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 14]]);\n}\nexport function onFetchLocalspareStart() {\n  return _regeneratorRuntime.wrap(function onFetchLocalspareStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(Localspare_types.FETCH_LOCALSPARE_START, fetchLocalspare);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //Add LOCALSPARES Saga\n\nexport function addLocalspare(action) {\n  var localspareList;\n  return _regeneratorRuntime.wrap(function addLocalspare$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('running Localspare add start saga');\n          _context3.next = 4;\n          return axios.post(\"/sp/comparison_spareparts/\", action.payload);\n\n        case 4:\n          localspareList = _context3.sent;\n          console.log(localspareList); //yield put(addLocalspareSuccess(sitesList.data));\n\n          _context3.next = 8;\n          return put(fetchLocalspareStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 8:\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put(addLocalspareFailure(_context3.t0.message));\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\nexport function onAddLocalspareStart() {\n  return _regeneratorRuntime.wrap(function onAddLocalspareStart$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(Localspare_types.ADD_LOCALSPARE_START, addLocalspare);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //Delete LOCALSPARES Saga\n\nexport function delLocalspare(action) {\n  var localspareList;\n  return _regeneratorRuntime.wrap(function delLocalspare$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log('running Localspare delete axios');\n          console.log(action.payload);\n          _context5.next = 5;\n          return axios.delete(\"/sp/comparison_spareparts/\" + action.payload);\n\n        case 5:\n          localspareList = _context5.sent;\n          console.log(localspareList);\n          _context5.next = 9;\n          return put(fetchLocalspareStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 9:\n          _context5.next = 15;\n          break;\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 15;\n          return put(delLocalspareFailure(_context5.t0.message));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 11]]);\n}\nexport function onDelLocalspareStart() {\n  return _regeneratorRuntime.wrap(function onDelLocalspareStart$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(Localspare_types.DEL_LOCALSPARE_START, delLocalspare);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //Edit LOCALSPARES Saga\n\nexport function editLocalspare(action) {\n  var rowId, values, localspareList;\n  return _regeneratorRuntime.wrap(function editLocalspare$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log('running Localspare Edit saga');\n          rowId = action.payload.spareId;\n          values = action.payload.values;\n          _context7.next = 6;\n          return axios.put(\"/sp/comparison_spareparts/\".concat(rowId, \"/\"), values);\n\n        case 6:\n          localspareList = _context7.sent;\n          console.log(localspareList);\n          _context7.next = 10;\n          return put(fetchLocalspareStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 10:\n          _context7.next = 16;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 16;\n          return put(editLocalspareFailure(_context7.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 12]]);\n}\nexport function onEditLocalspareStart() {\n  return _regeneratorRuntime.wrap(function onEditLocalspareStart$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(Localspare_types.EDIT_LOCALSPARE_START, editLocalspare);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/pro/frontend/src/redux/localspare/localspare.sagas.js"],"names":["fetchLocalspare","onFetchLocalspareStart","addLocalspare","onAddLocalspareStart","delLocalspare","onDelLocalspareStart","editLocalspare","onEditLocalspareStart","takeLatest","put","call","Localspare_types","axios","editLocalspareFailure","delLocalspareFailure","addLocalspareFailure","fetchLocalspareStart","fetchLocalspareSuccess","fetchLocalspareFailure","action","console","log","pageNo","payload","rowsPerPage","searchstr","get","localspareList","data","message","FETCH_LOCALSPARE_START","post","ADD_LOCALSPARE_START","delete","DEL_LOCALSPARE_START","rowId","spareId","values","EDIT_LOCALSPARE_START"],"mappings":"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","sourcesContent":["import { takeLatest, put, call } from 'redux-saga/effects';\nimport * as Localspare_types from './localspare.types';\n\nimport axios from '../../utils/axios1';\n\nimport {\n\teditLocalspareFailure,\n\tdelLocalspareFailure,\n\taddLocalspareFailure,\n\tfetchLocalspareStart,\n\tfetchLocalspareSuccess,\n\tfetchLocalspareFailure,\n} from './localspare.actions';\n\n//Fetch Localspare Saga\nexport function* fetchLocalspare(action) {\n\tconsole.log('running Localspare Fetch Start saga');\n\tlet pageNo = action.payload.pageNo;\n\tlet rowsPerPage = action.payload.rowsPerPage;\n\tlet searchstr = action.payload.searchstr;\n\ttry {\n\t\tconst localspareList = yield axios.get(\n\t\t\t`/sp/localsparelist/?search=${searchstr}&p=${\n\t\t\t\tpageNo + 1\n\t\t\t}&records=${rowsPerPage}`\n\t\t);\n\t\tconsole.log(localspareList);\n\t\tconsole.log(localspareList.data);\n\t\tyield put(fetchLocalspareSuccess(localspareList.data));\n\t} catch (error) {\n\t\tyield put(fetchLocalspareFailure(error.message));\n\t}\n}\n\nexport function* onFetchLocalspareStart() {\n\tyield takeLatest(Localspare_types.FETCH_LOCALSPARE_START, fetchLocalspare);\n}\n//Add LOCALSPARES Saga\nexport function* addLocalspare(action) {\n\ttry {\n\t\tconsole.log('running Localspare add start saga');\n\t\tconst localspareList = yield axios.post(\n\t\t\t`/sp/comparison_spareparts/`,\n\t\t\taction.payload\n\t\t);\n\t\tconsole.log(localspareList);\n\n\t\t//yield put(addLocalspareSuccess(sitesList.data));\n\t\tyield put(\n\t\t\tfetchLocalspareStart({\n\t\t\t\tpageNo: 0,\n\t\t\t\trowsPerPage: 10,\n\t\t\t\tsearchstr: '',\n\t\t\t})\n\t\t);\n\t} catch (error) {\n\t\tyield put(addLocalspareFailure(error.message));\n\t}\n}\n\nexport function* onAddLocalspareStart() {\n\tyield takeLatest(Localspare_types.ADD_LOCALSPARE_START, addLocalspare);\n}\n\n//Delete LOCALSPARES Saga\nexport function* delLocalspare(action) {\n\ttry {\n\t\tconsole.log('running Localspare delete axios');\n\t\tconsole.log(action.payload);\n\t\tconst localspareList = yield axios.delete(\n\t\t\t`/sp/comparison_spareparts/` + action.payload\n\t\t);\n\t\tconsole.log(localspareList);\n\n\t\tyield put(\n\t\t\tfetchLocalspareStart({\n\t\t\t\tpageNo: 0,\n\t\t\t\trowsPerPage: 10,\n\t\t\t\tsearchstr: '',\n\t\t\t})\n\t\t);\n\t} catch (error) {\n\t\tyield put(delLocalspareFailure(error.message));\n\t}\n}\n\nexport function* onDelLocalspareStart() {\n\tyield takeLatest(Localspare_types.DEL_LOCALSPARE_START, delLocalspare);\n}\n\n//Edit LOCALSPARES Saga\nexport function* editLocalspare(action) {\n\ttry {\n\t\tconsole.log('running Localspare Edit saga');\n\t\tlet rowId = action.payload.spareId;\n\t\tlet values = action.payload.values;\n\t\tconst localspareList = yield axios.put(\n\t\t\t`/sp/comparison_spareparts/${rowId}/`,\n\t\t\tvalues\n\t\t);\n\t\tconsole.log(localspareList);\n\n\t\tyield put(\n\t\t\tfetchLocalspareStart({\n\t\t\t\tpageNo: 0,\n\t\t\t\trowsPerPage: 10,\n\t\t\t\tsearchstr: '',\n\t\t\t})\n\t\t);\n\t} catch (error) {\n\t\tyield put(editLocalspareFailure(error.message));\n\t}\n}\n\nexport function* onEditLocalspareStart() {\n\tyield takeLatest(Localspare_types.EDIT_LOCALSPARE_START, editLocalspare);\n}\n"]},"metadata":{},"sourceType":"module"}