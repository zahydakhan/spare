{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchSites),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(onFetchSitesStart),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addSites),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(onAddSitesStart),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(delSites),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(onDelSitesStart),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(editSites),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(onEditSitesStart);\n\nimport { takeEvery, takeLatest, put, call } from 'redux-saga/effects';\nimport * as Sites_types from './sites.types';\nimport axios from '../../utils/axios1';\nimport { editSitesStart, editSitesSuccess, editSitesFailure, delSitesStart, delSitesSuccess, delSitesFailure, addSitesStart, addSitesFailure, fetchSitesStart, fetchSitesSuccess, fetchSitesFailure } from './sites.actions'; //Fetch SITES Saga\n\nexport function fetchSites() {\n  var sitesList;\n  return _regeneratorRuntime.wrap(function fetchSites$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('running Fetch Start saga');\n          _context.prev = 1;\n          _context.next = 4;\n          return axios.get(\"/sites/sites/\");\n\n        case 4:\n          sitesList = _context.sent;\n          console.log(sitesList);\n          console.log(sitesList.data.data);\n          _context.next = 9;\n          return put(fetchSitesSuccess(sitesList.data.data));\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 15;\n          return put(fetchSitesFailure(_context.t0.message));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 11]]);\n}\nexport function onFetchSitesStart() {\n  return _regeneratorRuntime.wrap(function onFetchSitesStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(Sites_types.FETCH_SITE_START, fetchSites);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //Add SITES Saga\n\nexport function addSites(action) {\n  var sitesList;\n  return _regeneratorRuntime.wrap(function addSites$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('running add start saga');\n          _context3.next = 4;\n          return axios.post(\"/sites/sites/\", action.payload);\n\n        case 4:\n          sitesList = _context3.sent;\n          console.log(sitesList); //yield put(addSitesSuccess(sitesList.data));\n\n          _context3.next = 8;\n          return put(fetchSitesStart());\n\n        case 8:\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put(addSitesFailure(_context3.t0.message));\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\nexport function onAddSitesStart() {\n  return _regeneratorRuntime.wrap(function onAddSitesStart$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(Sites_types.ADD_SITE_START, addSites);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //Delete SITES Saga\n\nexport function delSites(action) {\n  var sitesList;\n  return _regeneratorRuntime.wrap(function delSites$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log('running delete axios');\n          console.log(action.payload);\n          _context5.next = 5;\n          return axios.delete(\"/sites/sites/\" + action.payload);\n\n        case 5:\n          sitesList = _context5.sent;\n          console.log(sitesList);\n          _context5.next = 9;\n          return put(fetchSitesStart());\n\n        case 9:\n          _context5.next = 15;\n          break;\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 15;\n          return put(delSitesFailure(_context5.t0.message));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 11]]);\n}\nexport function onDelSitesStart() {\n  return _regeneratorRuntime.wrap(function onDelSitesStart$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(Sites_types.DEL_SITE_START, delSites);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //Edit SITES Saga\n\nexport function editSites(action) {\n  var rowId, values, sitesList;\n  return _regeneratorRuntime.wrap(function editSites$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log('running Site Edit saga');\n          rowId = action.payload.contractId;\n          values = action.payload.values;\n          _context7.next = 6;\n          return axios.put(\"/sites/sites/\".concat(rowId, \"/\"), values);\n\n        case 6:\n          sitesList = _context7.sent;\n          console.log(sitesList);\n          _context7.next = 10;\n          return put(fetchSitesStart());\n\n        case 10:\n          _context7.next = 16;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 16;\n          return put(editSitesFailure(_context7.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 12]]);\n}\nexport function onEditSitesStart() {\n  return _regeneratorRuntime.wrap(function onEditSitesStart$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(Sites_types.EDIT_SITE_START, editSites);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/pro/frontend/src/redux/sites/sites.sagas.js"],"names":["fetchSites","onFetchSitesStart","addSites","onAddSitesStart","delSites","onDelSitesStart","editSites","onEditSitesStart","takeEvery","takeLatest","put","call","Sites_types","axios","editSitesStart","editSitesSuccess","editSitesFailure","delSitesStart","delSitesSuccess","delSitesFailure","addSitesStart","addSitesFailure","fetchSitesStart","fetchSitesSuccess","fetchSitesFailure","console","log","get","sitesList","data","message","FETCH_SITE_START","action","post","payload","ADD_SITE_START","delete","DEL_SITE_START","rowId","contractId","values","EDIT_SITE_START"],"mappings":"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","sourcesContent":["import { takeEvery, takeLatest, put, call } from 'redux-saga/effects';\n\nimport * as Sites_types from './sites.types';\nimport axios from '../../utils/axios1';\n\nimport {\n\teditSitesStart,\n\teditSitesSuccess,\n\teditSitesFailure,\n\tdelSitesStart,\n\tdelSitesSuccess,\n\tdelSitesFailure,\n\taddSitesStart,\n\taddSitesFailure,\n\tfetchSitesStart,\n\tfetchSitesSuccess,\n\tfetchSitesFailure,\n} from './sites.actions';\n\n//Fetch SITES Saga\nexport function* fetchSites() {\n\tconsole.log('running Fetch Start saga');\n\ttry {\n\t\tconst sitesList = yield axios.get(`/sites/sites/`);\n\t\tconsole.log(sitesList);\n\t\tconsole.log(sitesList.data.data);\n\t\tyield put(fetchSitesSuccess(sitesList.data.data));\n\t} catch (error) {\n\t\tyield put(fetchSitesFailure(error.message));\n\t}\n}\n\nexport function* onFetchSitesStart() {\n\tyield takeLatest(Sites_types.FETCH_SITE_START, fetchSites);\n}\n//Add SITES Saga\nexport function* addSites(action) {\n\ttry {\n\t\tconsole.log('running add start saga');\n\t\tconst sitesList = yield axios.post(`/sites/sites/`, action.payload);\n\t\tconsole.log(sitesList);\n\n\t\t//yield put(addSitesSuccess(sitesList.data));\n\t\tyield put(fetchSitesStart());\n\t} catch (error) {\n\t\tyield put(addSitesFailure(error.message));\n\t}\n}\n\nexport function* onAddSitesStart() {\n\tyield takeLatest(Sites_types.ADD_SITE_START, addSites);\n}\n\n//Delete SITES Saga\nexport function* delSites(action) {\n\ttry {\n\t\tconsole.log('running delete axios');\n\t\tconsole.log(action.payload);\n\t\tconst sitesList = yield axios.delete(`/sites/sites/` + action.payload);\n\t\tconsole.log(sitesList);\n\n\t\tyield put(fetchSitesStart());\n\t} catch (error) {\n\t\tyield put(delSitesFailure(error.message));\n\t}\n}\n\nexport function* onDelSitesStart() {\n\tyield takeLatest(Sites_types.DEL_SITE_START, delSites);\n}\n\n//Edit SITES Saga\nexport function* editSites(action) {\n\ttry {\n\t\tconsole.log('running Site Edit saga');\n\t\tlet rowId = action.payload.contractId;\n\t\tlet values = action.payload.values;\n\t\tconst sitesList = yield axios.put(`/sites/sites/${rowId}/`, values);\n\t\tconsole.log(sitesList);\n\n\t\tyield put(fetchSitesStart());\n\t} catch (error) {\n\t\tyield put(editSitesFailure(error.message));\n\t}\n}\n\nexport function* onEditSitesStart() {\n\tyield takeLatest(Sites_types.EDIT_SITE_START, editSites);\n}\n"]},"metadata":{},"sourceType":"module"}