{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchMainOrder),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(onFetchMainOrderStart),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addMainOrder),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(onAddMainOrderStart),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(delMainOrder),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(onDelMainOrderStart),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(editMainOrder),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(onEditMainOrderStart);\n\nimport { takeLatest, put, call } from 'redux-saga/effects';\nimport * as mainOrder_types from './main_order.types';\nimport axios from '../../utils/axios1';\nimport { fetchMainOrderStart, fetchMainOrderSuccess, fetchMainOrderFailure, addMainOrderStart, addMainOrderFailure, delMainOrderStart, delMainOrderFailure, editMainOrderStart, editMainOrderFailure } from './main_order.actions'; //Fetch Site Order Saga\n\nexport function fetchMainOrder(action) {\n  var mainOrdersList;\n  return _regeneratorRuntime.wrap(function fetchMainOrder$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('running Site Order Fetch Start saga');\n          _context.prev = 1;\n          _context.next = 4;\n          return axios.get(\"/pr/main_pr/\");\n\n        case 4:\n          mainOrdersList = _context.sent;\n          console.log(mainOrdersList);\n          _context.next = 8;\n          return put(fetchMainOrderSuccess(mainOrdersList.data));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(fetchMainOrderFailure(_context.t0.message));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\nexport function onFetchMainOrderStart() {\n  return _regeneratorRuntime.wrap(function onFetchMainOrderStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mainOrder_types.FETCH_MAIN_ORDER_START, fetchMainOrder);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //Add ROLLERS Saga\n\nexport function addMainOrder(action) {\n  var mainOrderList;\n  return _regeneratorRuntime.wrap(function addMainOrder$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('running main order add start saga');\n          console.log(action.payload);\n          _context3.next = 5;\n          return axios.post(\"/pr/main_pr/\", action.payload);\n\n        case 5:\n          mainOrderList = _context3.sent;\n          console.log(mainOrderList); //yield put(addRollerSuccess(sitesList.data));\n\n          _context3.next = 9;\n          return put(fetchMainOrderStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 9:\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put(addMainOrderFailure(_context3.t0.message));\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\nexport function onAddMainOrderStart() {\n  return _regeneratorRuntime.wrap(function onAddMainOrderStart$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(mainOrder_types.ADD_MAIN_ORDER_START, addMainOrder);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //Delete ROLLERS Saga\n\nexport function delMainOrder(action) {\n  var mainOrderList;\n  return _regeneratorRuntime.wrap(function delMainOrder$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          console.log('running site order delete axios');\n          console.log(action.payload);\n          _context5.next = 5;\n          return axios.delete(\"/pr/main_pr/\" + action.payload);\n\n        case 5:\n          mainOrderList = _context5.sent;\n          console.log(mainOrderList);\n          _context5.next = 9;\n          return put(fetchMainOrderStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 9:\n          _context5.next = 15;\n          break;\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 15;\n          return put(delMainOrderFailure(_context5.t0.message));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 11]]);\n}\nexport function onDelMainOrderStart() {\n  return _regeneratorRuntime.wrap(function onDelMainOrderStart$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(mainOrder_types.DEL_MAIN_ORDER_START, delMainOrder);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //Edit ROLLERS Saga\n\nexport function editMainOrder(action) {\n  var rowId, values, mainOrderList;\n  return _regeneratorRuntime.wrap(function editMainOrder$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log('Running Site Order Edit saga');\n          rowId = action.payload.rollerId;\n          values = action.payload.values;\n          _context7.next = 6;\n          return axios.put(\"/pr/main_pr/\".concat(rowId, \"/\"), values);\n\n        case 6:\n          mainOrderList = _context7.sent;\n          console.log(mainOrderList);\n          _context7.next = 10;\n          return put(fetchMainOrderStart({\n            pageNo: 0,\n            rowsPerPage: 10,\n            searchstr: ''\n          }));\n\n        case 10:\n          _context7.next = 16;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 16;\n          return put(editMainOrderFailure(_context7.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 12]]);\n}\nexport function onEditMainOrderStart() {\n  return _regeneratorRuntime.wrap(function onEditMainOrderStart$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(mainOrder_types.EDIT_MAIN_ORDER_START, editMainOrder);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/pro/frontend/src/redux/main-order/main_order.sagas.js"],"names":["fetchMainOrder","onFetchMainOrderStart","addMainOrder","onAddMainOrderStart","delMainOrder","onDelMainOrderStart","editMainOrder","onEditMainOrderStart","takeLatest","put","call","mainOrder_types","axios","fetchMainOrderStart","fetchMainOrderSuccess","fetchMainOrderFailure","addMainOrderStart","addMainOrderFailure","delMainOrderStart","delMainOrderFailure","editMainOrderStart","editMainOrderFailure","action","console","log","get","mainOrdersList","data","message","FETCH_MAIN_ORDER_START","payload","post","mainOrderList","pageNo","rowsPerPage","searchstr","ADD_MAIN_ORDER_START","delete","DEL_MAIN_ORDER_START","rowId","rollerId","values","EDIT_MAIN_ORDER_START"],"mappings":"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","sourcesContent":["import { takeLatest, put, call } from 'redux-saga/effects';\n\nimport * as mainOrder_types from './main_order.types';\nimport axios from '../../utils/axios1';\n\nimport {\n    fetchMainOrderStart,\n    fetchMainOrderSuccess,\n    fetchMainOrderFailure,\n    addMainOrderStart,\n    addMainOrderFailure,\n    delMainOrderStart,\n    delMainOrderFailure,\n    editMainOrderStart,\n    editMainOrderFailure,\n\n} from './main_order.actions';\n\n//Fetch Site Order Saga\nexport function* fetchMainOrder(action) {\n    console.log('running Site Order Fetch Start saga');\n    \n    try {\n        const mainOrdersList = yield axios.get(\n            `/pr/main_pr/`);\n        console.log(mainOrdersList);\n        yield put(fetchMainOrderSuccess(mainOrdersList.data));\n    } catch (error) {\n        yield put(fetchMainOrderFailure(error.message));\n    }\n}\n\nexport function* onFetchMainOrderStart() {\n        yield takeLatest(mainOrder_types.FETCH_MAIN_ORDER_START, fetchMainOrder);\n    }\n    //Add ROLLERS Saga\nexport function* addMainOrder(action) {\n    try {\n        console.log('running main order add start saga');\n        console.log(action.payload);\n        const mainOrderList = yield axios.post(`/pr/main_pr/`, action.payload);\n        console.log(mainOrderList);\n\n        //yield put(addRollerSuccess(sitesList.data));\n        yield put(fetchMainOrderStart({ pageNo: 0, rowsPerPage: 10, searchstr: '' }));\n    } catch (error) {\n        yield put(addMainOrderFailure(error.message));\n    }\n}\n\nexport function* onAddMainOrderStart() {\n    yield takeLatest(mainOrder_types.ADD_MAIN_ORDER_START, addMainOrder);\n}\n\n//Delete ROLLERS Saga\nexport function* delMainOrder(action) {\n    try {\n        console.log('running site order delete axios');\n        console.log(action.payload);\n        const mainOrderList = yield axios.delete(`/pr/main_pr/` + action.payload);\n        console.log(mainOrderList);\n\n        yield put(fetchMainOrderStart({ pageNo: 0, rowsPerPage: 10, searchstr: '' }));\n    } catch (error) {\n        yield put(delMainOrderFailure(error.message));\n    }\n}\n\nexport function* onDelMainOrderStart() {\n    yield takeLatest(mainOrder_types.DEL_MAIN_ORDER_START, delMainOrder);\n}\n\n//Edit ROLLERS Saga\nexport function* editMainOrder(action) {\n    try {\n        console.log('Running Site Order Edit saga');\n        let rowId = action.payload.rollerId;\n        let values = action.payload.values;\n        const mainOrderList = yield axios.put(`/pr/main_pr/${rowId}/`, values);\n        console.log(mainOrderList);\n\n        yield put(fetchMainOrderStart({ pageNo: 0, rowsPerPage: 10, searchstr: '' }));\n    } catch (error) {\n        yield put(editMainOrderFailure(error.message));\n    }\n}\n\nexport function* onEditMainOrderStart() {\n    yield takeLatest(mainOrder_types.EDIT_MAIN_ORDER_START, editMainOrder);\n}"]},"metadata":{},"sourceType":"module"}