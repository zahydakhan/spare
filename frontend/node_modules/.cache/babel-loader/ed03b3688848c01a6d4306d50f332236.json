{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(onFetchUserStart);\n\nimport { takeLatest, put, call } from 'redux-saga/effects';\nimport * as User_types from './user.types';\nimport axios from '../../utils/axios1';\nimport { fetchUserSuccess, fetchUserFailure } from './user.actions'; //Fetch User Saga\n\nexport function fetchUser(action) {\n  var email, password, currentUser;\n  return _regeneratorRuntime.wrap(function fetchUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('running User Fetch Start saga');\n          email = action.payload.email;\n          password = action.payload.password;\n          _context.prev = 3;\n          _context.next = 6;\n          return axios.post(\"/token/\", {\n            email: email,\n            password: password\n          });\n\n        case 6:\n          currentUser = _context.sent;\n          console.log(currentUser);\n          _context.next = 10;\n          return put(fetchUserSuccess(currentUser.data));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 16;\n          return put(fetchUserFailure(_context.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[3, 12]]);\n}\nexport function onFetchUserStart() {\n  return _regeneratorRuntime.wrap(function onFetchUserStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(User_types.FETCH_USER_START, fetchUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/pro/frontend/src/redux/user/user.sagas.js"],"names":["fetchUser","onFetchUserStart","takeLatest","put","call","User_types","axios","fetchUserSuccess","fetchUserFailure","action","console","log","email","payload","password","post","currentUser","data","message","FETCH_USER_START"],"mappings":";;oDAWiBA,S;qDAeAC,gB;;AA1BjB,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AAEA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SACIC,gBADJ,EAEIC,gBAFJ,QAGO,gBAHP,C,CAKA;;AACA,OAAO,SAAUR,SAAV,CAAoBS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACIC,UAAAA,KAFD,GAESH,MAAM,CAACI,OAAP,CAAeD,KAFxB;AAGCE,UAAAA,QAHD,GAGYL,MAAM,CAACI,OAAP,CAAeC,QAH3B;AAAA;AAAA;AAKqB,iBAAMR,KAAK,CAACS,IAAN,YACX;AAAEH,YAAAA,KAAK,EAAEA,KAAT;AAAgBE,YAAAA,QAAQ,EAAEA;AAA1B,WADW,CAAN;;AALrB;AAKOE,UAAAA,WALP;AAQCN,UAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AARD;AASC,iBAAMb,GAAG,CAACI,gBAAgB,CAACS,WAAW,CAACC,IAAb,CAAjB,CAAT;;AATD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWC,iBAAMd,GAAG,CAACK,gBAAgB,CAAC,YAAMU,OAAP,CAAjB,CAAT;;AAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeP,OAAO,SAAUjB,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,UAAU,CAACG,UAAU,CAACc,gBAAZ,EAA8BnB,SAA9B,CAAhB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLatest, put, call } from 'redux-saga/effects';\r\n\r\nimport * as User_types from './user.types';\r\nimport axios from '../../utils/axios1';\r\n\r\nimport {\r\n    fetchUserSuccess,\r\n    fetchUserFailure,\r\n} from './user.actions';\r\n\r\n//Fetch User Saga\r\nexport function* fetchUser(action) {\r\n    console.log('running User Fetch Start saga');\r\n    let email = action.payload.email;\r\n    let password = action.payload.password;\r\n    try {\r\n        const currentUser = yield axios.post(\r\n            `/token/`, { email: email, password: password }\r\n        );\r\n        console.log(currentUser);\r\n        yield put(fetchUserSuccess(currentUser.data));\r\n    } catch (error) {\r\n        yield put(fetchUserFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* onFetchUserStart() {\r\n    yield takeLatest(User_types.FETCH_USER_START, fetchUser);\r\n}"]},"metadata":{},"sourceType":"module"}