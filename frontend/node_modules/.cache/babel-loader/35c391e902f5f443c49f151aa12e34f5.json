{"ast":null,"code":"import _slicedToArray from \"C:/Users/zahyd/OneDrive/Desktop/pro/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zahyd\\\\OneDrive\\\\Desktop\\\\pro\\\\frontend\\\\src\\\\pages\\\\main_order\\\\main_order.page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MainOrderContainer from \"./main_order_container\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMainOrderStart } from '../../redux/main-order/main_order.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    chip: {\n      margin: 2\n    },\n    noLabel: {\n      marginTop: theme.spacing(3)\n    },\n    tableContainer: {\n      paddingBottom: \"2em\"\n    }\n  };\n});\nvar ITEM_HEIGHT = 35;\nvar ITEM_PADDING_TOP = 1;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\n      width: 190\n    }\n  }\n};\nexport default function MultipleSelect() {\n  _s();\n\n  var _this = this;\n\n  var componentRef = useRef();\n  var dispatch = useDispatch();\n  var handlePrint = useReactToPrint({\n    content: function content() {\n      return componentRef.current;\n    }\n  });\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      siteName = _React$useState2[0],\n      setSiteName = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      VendorName = _React$useState4[0],\n      setVendorName = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      month = _React$useState6[0],\n      setMonth = _React$useState6[1];\n  /* Selected Iputs */\n\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      selectedSite = _React$useState8[0],\n      setSelectedSite = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedVendor = _React$useState10[0],\n      setSelectedVendor = _React$useState10[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      selectedMonth = _React$useState12[0],\n      setSelectedMonth = _React$useState12[1];\n\n  var handleChangeSite = function handleChangeSite(event) {\n    setSelectedSite(event.target.value);\n  };\n\n  var handleChangeVendor = function handleChangeVendor(event) {\n    setSelectedVendor(event.target.value);\n  };\n\n  var handleChangeMonth = function handleChangeMonth(event) {\n    setSelectedMonth(event.target.value);\n  };\n\n  useEffect(function () {\n    dispatch(fetchMainOrderStart({\n      pageNo: page,\n      rowsPerPage: rowsPerPage,\n      searchstr: search\n    }));\n    axiosInstance.get(\"/pr/main_pr/\").then(function (res) {\n      console.log(res);\n      var selSite = [];\n      var selVendor = [];\n      var selMonth = [];\n      res.data.data.map(function (obbj) {\n        selSite.push(obbj.site_name);\n        selVendor.push(obbj.vendor_name);\n        selMonth.push(obbj.month);\n      });\n      var uniqueSite = Array.from(new Set(selSite));\n      var uniqueVendor = Array.from(new Set(selVendor));\n      var uniqueMonth = Array.from(new Set(selMonth));\n      setSiteName(uniqueSite);\n      setVendorName(uniqueVendor);\n      setMonth(uniqueMonth);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePrint,\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      children: \"Print this out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"row\",\n      className: classes.tableContainer,\n      spacing: 10,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Site Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedSite,\n            onChange: handleChangeSite,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: siteName.map(function (name1) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name1,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedSite.indexOf(name1) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, _this)]\n              }, name1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Vendor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedVendor,\n            onChange: handleChangeVendor,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: VendorName.map(function (name) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedVendor.indexOf(name) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, _this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-checkbox-label\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-mutiple-checkbox-label\",\n            id: \"demo-mutiple-checkbox\",\n            multiple: true,\n            value: selectedMonth,\n            onChange: handleChangeMonth,\n            input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 22\n            }, this),\n            renderValue: function renderValue(selected) {\n              return selected.join(\", \");\n            },\n            MenuProps: MenuProps,\n            children: month.map(function (name) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: name,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedMonth.indexOf(name) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, _this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainOrderContainer, {\n      ref: componentRef,\n      selectedSite: selectedSite,\n      selectedVendor: selectedVendor,\n      selectedMonth: selectedMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultipleSelect, \"WbEIbJW1H0bCt9HNUAHItfI4rJM=\", false, function () {\n  return [useDispatch, useReactToPrint, useStyles, useTheme];\n});\n\n_c = MultipleSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelect\");","map":{"version":3,"sources":["C:/Users/zahyd/OneDrive/Desktop/pro/frontend/src/pages/main_order/main_order.page.js"],"names":["React","useEffect","useState","useRef","useReactToPrint","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Grid","MainOrderContainer","Button","useDispatch","useSelector","fetchMainOrderStart","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","tableContainer","paddingBottom","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MultipleSelect","componentRef","dispatch","handlePrint","content","current","classes","siteName","setSiteName","VendorName","setVendorName","month","setMonth","selectedSite","setSelectedSite","selectedVendor","setSelectedVendor","selectedMonth","setSelectedMonth","handleChangeSite","event","target","value","handleChangeVendor","handleChangeMonth","pageNo","page","rowsPerPage","searchstr","search","axiosInstance","get","then","res","console","log","selSite","selVendor","selMonth","data","map","obbj","push","site_name","vendor_name","uniqueSite","Array","from","Set","uniqueVendor","uniqueMonth","selected","join","name1","indexOf","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MainOrderContainer from \"./main_order_container\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMainOrderStart } from '../../redux/main-order/main_order.actions';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n  tableContainer: {\n    paddingBottom: \"2em\",\n  },\n}));\n\nconst ITEM_HEIGHT = 35;\nconst ITEM_PADDING_TOP = 1;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\n      width: 190,\n    },\n  },\n};\n\nexport default function MultipleSelect() {\n  const componentRef = useRef();\n  const dispatch = useDispatch();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n  const classes = useStyles();\n  const theme = useTheme();\n  const [siteName, setSiteName] = React.useState([]);\n  const [VendorName, setVendorName] = React.useState([]);\n  const [month, setMonth] = React.useState([]);\n\n  /* Selected Iputs */\n  const [selectedSite, setSelectedSite] = React.useState([]);\n  const [selectedVendor, setSelectedVendor] = React.useState([]);\n  const [selectedMonth, setSelectedMonth] = React.useState([]);\n\n  const handleChangeSite = (event) => {\n    setSelectedSite(event.target.value);\n  };\n\n  const handleChangeVendor = (event) => {\n    setSelectedVendor(event.target.value);\n  };\n\n  const handleChangeMonth = (event) => {\n    setSelectedMonth(event.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(\n\t\t\tfetchMainOrderStart({\n\t\t\t\tpageNo: page,\n\t\t\t\trowsPerPage: rowsPerPage,\n\t\t\t\tsearchstr: search,\n\t\t\t})\n\t\t);\n\n    axiosInstance.get(\"/pr/main_pr/\").then((res) => {\n      console.log(res);\n      const selSite = [];\n      const selVendor = [];\n      const selMonth = [];\n      res.data.data.map((obbj) => {\n        selSite.push(obbj.site_name);\n        selVendor.push(obbj.vendor_name);\n        selMonth.push(obbj.month);\n      });\n      const uniqueSite = Array.from(new Set(selSite));\n      const uniqueVendor = Array.from(new Set(selVendor));\n      const uniqueMonth = Array.from(new Set(selMonth));\n      setSiteName(uniqueSite);\n      setVendorName(uniqueVendor);\n      setMonth(uniqueMonth);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Button\n        onClick={handlePrint}\n        variant='contained'\n        color='primary'\n        size='large'\n      >\n        Print this out!\n      </Button>\n      <Grid\n        container\n        justify='center'\n        direction='row'\n        className={classes.tableContainer}\n        spacing={10}\n      >\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <InputLabel id='demo-mutiple-checkbox-label'>Site Name</InputLabel>\n            <Select\n              labelId='demo-mutiple-checkbox-label'\n              id='demo-mutiple-checkbox'\n              multiple\n              value={selectedSite}\n              onChange={handleChangeSite}\n              input={<Input />}\n              renderValue={(selected) => selected.join(\", \")}\n              MenuProps={MenuProps}\n            >\n              {siteName.map((name1) => (\n                <MenuItem key={name1} value={name1}>\n                  <Checkbox checked={selectedSite.indexOf(name1) > -1} />\n                  <ListItemText primary={name1} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <InputLabel id='demo-mutiple-checkbox-label'>\n              Vendor Name\n            </InputLabel>\n            <Select\n              labelId='demo-mutiple-checkbox-label'\n              id='demo-mutiple-checkbox'\n              multiple\n              value={selectedVendor}\n              onChange={handleChangeVendor}\n              input={<Input />}\n              renderValue={(selected) => selected.join(\", \")}\n              MenuProps={MenuProps}\n            >\n              {VendorName.map((name) => (\n                <MenuItem key={name} value={name}>\n                  <Checkbox checked={selectedVendor.indexOf(name) > -1} />\n                  <ListItemText primary={name} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <InputLabel id='demo-mutiple-checkbox-label'>Month</InputLabel>\n            <Select\n              labelId='demo-mutiple-checkbox-label'\n              id='demo-mutiple-checkbox'\n              multiple\n              value={selectedMonth}\n              onChange={handleChangeMonth}\n              input={<Input />}\n              renderValue={(selected) => selected.join(\", \")}\n              MenuProps={MenuProps}\n            >\n              {month.map((name) => (\n                <MenuItem key={name} value={name}>\n                  <Checkbox checked={selectedMonth.indexOf(name) > -1} />\n                  <ListItemText primary={name} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      <MainOrderContainer\n        ref={componentRef}\n        selectedSite={selectedSite}\n        selectedVendor={selectedVendor}\n        selectedMonth={selectedMonth}\n      />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}